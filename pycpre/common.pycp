from .cobjects import *;
from .generic import *;

class DefaultType(CRaw) {
    def __init__(self, name, format = None) {
        super().__init__(name);
        if format {
            self.format = format;
        }
    }

    cmacro add(a, b) {((a)+(b))}
    cmacro sub(a, b) {((a)-(b))}
    cmacro mul(a, b) {((a)*(b))}
    cmacro div(a, b) {((a)/(b))}
    cmacro eq(a, b) {((a)==(b))}
    cmacro ne(a, b) {((a)!=(b))}
    cmacro lt(a, b) {((a)<(b))}
    cmacro gt(a, b) {((a)>(b))}
    cmacro le(a, b) {((a)<=(b))}
    cmacro ge(a, b) {((a)>=(b))}
    cmacro mod(a, b) {((a) % (b))}
    cmacro lnot(a) {(!(a))}
    cmacro neg(a) {(-(a))}
    cmacro pos(a) {(+(a))}
    cmacro lshift(a, b) {((a)<<(b))}
    cmacro rshift(a, b) {((a)>>(b))}
    cmacro land(a, b) {((a)&&(b))}
    cmacro lor(a, b) {((a)||(b))}
    cmacro band(a, b) {((a)&(b))}
    cmacro bor(a, b) {((a)|(b))}
    cmacro xor(a, b) {((a)^(b))}
    cmacro bnot(a) {(~(a))}
    cmacro iadd1(a) {((a)++)}
    cmacro isub1(a) {((a)--)}
    cmacro assign(a, b) {(a)=(b);}
    cmacro iadd(a, b) {(a)+=(b);}
    cmacro isub(a, b) {(a)-=(b);}
    cmacro imul(a, b) {(a)*=(b);}
    cmacro idiv(a, b) {(a)/=(b);}
    cmacro imod(a, b) {(a)%=(b);}
    cmacro isub(a, b) {(a)<<=(b);}
    cmacro ilshift(a, b) {(a)>>=(b);}
    cmacro irshift(a, b) {(a)/=(b);}
    cmacro iband(a, b) {(a)&=(b);}
    cmacro ibor(a, b) {(a)|=(b);}
    cmacro ixor(a, b) {(a)^=(b);}
    cmacro getindex(a, b) {((a)[(b)])}
    cmacro setindex(a, b, c) {(a)[(b)]=(c);}
    cmacro get(a, b) {((a).b)}
    cmacro set(a, b, c) {(a).b=(c);}
    cmacro getp(a, b) {((a)->b)}
    cmacro setp(a, b, c) {(a)->b=(c);}
    cmacro ref(a) {(&(a))}
    cmacro deref(a) {(*(a))}
}

@generic
def Pointer(T) {
    return ctypedef(T*);
}

@generic
def Array(T, N) {
    return carraydef T[N];
}

@generic
def Global(T, value) {
    cglobal T r = value;
    return r;
}

@generic
def Typedef(T) {
    return ctypedef(T);
}

@generic
def Define(value) {
    cdefine r value;
    return r;
}

@generic
def FunctionPtr(R, T) {
    return cfundef R(tuple(T));
}

cchar = DefaultType("char", Define("%c"));
cuchar = DefaultType("unsigned char", Define("%d"));
cshort = DefaultType("short", Define("%hi"));
cushort = DefaultType("unsigned short", Define("%hu"));
cint = DefaultType("int", Define("%d"));
cuint = DefaultType("unsigned", Define("%du"));
clong = DefaultType("long", Define("%ld"));
culong = DefaultType("unsigned long", Define("%lu"));
cllong = DefaultType("long long", Define("%lld"));
cullong = DefaultType("unsigned long long", Define("%llu"));
cfloat = DefaultType("float", Define("%f"));
cdouble = DefaultType("double", Define("%lf"));
cvoid = DefaultType("void", Define("%p"));

C = CDummySpace();